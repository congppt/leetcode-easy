using Leetcode;
//var node1 = new PathSumProblem.TreeNode(1);
//var node2 = new PathSumProblem.TreeNode(-2);
//var node3 = new PathSumProblem.TreeNode(-3);
//var node4 = new PathSumProblem.TreeNode(1);
//var node5 = new PathSumProblem.TreeNode(3);
//var node6 = new PathSumProblem.TreeNode(-2);
//var node7 = new PathSumProblem.TreeNode(-1);
//var node8 = new PathSumProblem.TreeNode(8);
//node1.left = node2;
//node1.right = node3;
//node2.left = node4;
//node2.right = node5;
//node3.left = node6;
//node4.left = node7;
//Console.WriteLine(PathSumProblem.HasPathSum(node1, -4));
Console.WriteLine(PascalsTriangleProblem.Generate(5));
